// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: query.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const deletePlace = `-- name: DeletePlace :exec
DELETE FROM places WHERE id = $1
`

func (q *Queries) DeletePlace(ctx context.Context, id pgtype.UUID) error {
	_, err := q.db.Exec(ctx, deletePlace, id)
	return err
}

const getPlaces = `-- name: GetPlaces :many
SELECT id, name, country, lat, lon FROM places
`

func (q *Queries) GetPlaces(ctx context.Context) ([]Place, error) {
	rows, err := q.db.Query(ctx, getPlaces)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Place
	for rows.Next() {
		var i Place
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.Country,
			&i.Lat,
			&i.Lon,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
